
/*******************************************************************************
* font
* filename: D:/projects/SSL_OEL_SAS1_DemoKit/Tools/lcd-image-converter/ArialBlack_arrows.xml
* name: ArialBlack_arrows
* family: Arial Black
* size: 36
* style: Black
* included characters: ⇧⇩
* antialiasing: no
* type: proportional
* encoding: UTF-16
* unicode bom: no
*
* preset name: Monochrome
* data block size: 8 bit(s), uint8_t
* RLE compression enabled: no
* conversion type: Monochrome, Diffuse Dither 128
* bits per pixel: 1
*
* preprocess:
*  main scan direction: top_to_bottom
*  line scan direction: forward
*  inverse: no
*******************************************************************************/

/*
 typedef struct {
     long int code;
     const tImage *image;
     } tChar;
 typedef struct {
     int length;
     const tChar *chars;
     } tFont;
*/

#include <stdint.h>



#if (0x0 == 0x0)
static const uint8_t image_data_ArialBlack_arrows_0x21e7[72] = {
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x0e, 0x00, 
    0x00, 0x3b, 0x00, 
    0xc0, 0x71, 0x00, 
    0xe0, 0xe0, 0x00, 
    0x70, 0x80, 0x01, 
    0x18, 0x00, 0x03, 
    0xfc, 0xe0, 0x07, 
    0xc0, 0x60, 0x00, 
    0xc0, 0x60, 0x00, 
    0xc0, 0x60, 0x00, 
    0xc0, 0x60, 0x00, 
    0xc0, 0x60, 0x00, 
    0xc0, 0x60, 0x00, 
    0xc0, 0x60, 0x00, 
    0xc0, 0x60, 0x00, 
    0xc0, 0x7f, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00
};
static const tImage ArialBlack_arrows_0x21e7 = { image_data_ArialBlack_arrows_0x21e7,
    21, 24, 8};
#endif

#if (0x0 == 0x0)
static const uint8_t image_data_ArialBlack_arrows_0x21e9[72] = {
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0xc0, 0x7f, 0x00, 
    0xc0, 0x60, 0x00, 
    0xc0, 0x60, 0x00, 
    0xc0, 0x60, 0x00, 
    0xc0, 0x60, 0x00, 
    0xc0, 0x60, 0x00, 
    0xc0, 0x60, 0x00, 
    0xc0, 0x60, 0x00, 
    0xc0, 0x60, 0x00, 
    0xfc, 0xe0, 0x07, 
    0x38, 0x00, 0x03, 
    0x70, 0xc0, 0x01, 
    0xe0, 0xe0, 0x00, 
    0xc0, 0x71, 0x00, 
    0x00, 0x1b, 0x00, 
    0x00, 0x0e, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00
};
static const tImage ArialBlack_arrows_0x21e9 = { image_data_ArialBlack_arrows_0x21e9,
    21, 24, 8};
#endif


static const tChar ArialBlack_arrows_array[] = {

#if (0x0 == 0x0)
  // character: '⇧'
  {0x21e7, &ArialBlack_arrows_0x21e7},
#else
  // character: '⇧' == ''
  {0x21e7, &ArialBlack_arrows_0x},
#endif

#if (0x0 == 0x0)
  // character: '⇩'
  {0x21e9, &ArialBlack_arrows_0x21e9}
#else
  // character: '⇩' == ''
  {0x21e9, &ArialBlack_arrows_0x}
#endif

};


const tFont ArialBlack_arrows = { 2, ArialBlack_arrows_array };

